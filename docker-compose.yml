version: "3.8"

networks:
  internal:

volumes:
  uploads:
  pgdata:

services:
  postgresql-db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - internal
    volumes:
      - pgdata:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"

  openpro-minio:
    image: minio/minio
    container_name: openpro-minio
    environment:
      MINIO_PORT: 9000
      MINIO_HOST: openpro-minio
      MINIO_ROOT_USER: access-key
      MINIO_ROOT_PASSWORD: secret-key
    pull_policy: always
    restart: unless-stopped
    networks:
      - internal
    command: server /uploads --console-address ":9090"
    volumes:
      - uploads:/uploads

  createbuckets:
    image: minio/mc
    environment:
      MINIO_PORT: 9000
      MINIO_HOST: openpro-minio
      MINIO_ROOT_USER: access-key
      MINIO_ROOT_PASSWORD: secret-key
      BUCKET_NAME: uploads
    pull_policy: always
    networks:
      - internal
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add openpro-minio http://openpro-minio:9000 access-key secret-key;
      /usr/bin/mc mb openpro-minio/uploads;
      /usr/bin/mc anonymous set download openpro-minio/uploads;
      "
    depends_on:
      - openpro-minio

  backend:
    container_name: backend
    image: ghcr.io/openpro-io/openpro-backend:latest
    environment:
      HTTP_PORT: 8080
      SQL_URI: postgres://postgres:postgres@postgresql-db:5432/postgres
      FRONTEND_HOSTNAME: http://frontend:3000
      FILE_SIZE_LIMIT: 5242880
      BUCKET_NAME: uploads
      # Minio
      MINIO_PORT: 9000
      MINIO_HOST: openpro-minio
      MINIO_ROOT_USER: access-key
      MINIO_ROOT_PASSWORD: secret-key
    networks:
      - internal
    depends_on:
      - postgresql-db
      - createbuckets

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8080
      NEXT_PUBLIC_DEFAULT_LOGIN_PROVIDER: keycloak
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: 68a8450a7e7945f6a0c83cef2d46eae177564ac7c6c3872f55bdb04f36f568be
      NEXT_PUBLIC_NEXTAUTH_URL: http://localhost:3000

      # Uncomment the following lines to enable keycloak OAuth
      #AUTH_KEYCLOAK_ID:
      #AUTH_KEYCLOAK_SECRET:
      #KEYCLOAK_BASE_URL:

      # Uncomment the following lines to enable GitHub OAuth
      #GITHUB_CLIENT_ID: <client-id>
      #GITHUB_CLIENT_SECRET: <client-secret>
      AUTH_KEYCLOAK_ID: scrumboard
      AUTH_KEYCLOAK_SECRET: H4yFPBaVBgsYmcwsghEVuEgOXcEkX0YU
      AUTH_KEYCLOAK_ISSUER: https://auth.oauthd.me/realms/claysjira
      KEYCLOAK_BASE_URL: https://auth.oauthd.me
      NFTY_WS_HOST: localhost:8093
      NFTY_WS_SSL: false
      PUBLIC_NFTY_HTTP_SSL: false
    networks:
      - internal
    ports:
      - "3000:3000"
    depends_on:
      - backend
